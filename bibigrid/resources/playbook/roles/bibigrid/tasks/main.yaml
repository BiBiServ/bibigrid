# - name: 'YUM - async task'
#  yum:
#    name: docker-io
#    state: installed
#  async: 1000
#  poll: 0
#  register: yum_sleeper
#
# - name: 'YUM - check on async task'
#  async_status:
#    jid: "{{ yum_sleeper.ansible_job_id }}"
#  register: job_result
#  until: job_result.finished
#  retries: 30

- name: Setup persistent ip routes
  when: "'workers' in group_names and wireguard_common is defined"
  block:
    - name: Running 000-add-ip-routes.yaml
      debug:
        msg: "[BIBIGRID] Adding ip routes"
    - import_tasks: 000-add-ip-routes.yaml

- name: Setup common software and dependencies - server rights
  when: "'master' in group_names"
  block:
    - name: Running 000-playbook-rights-server.yaml
      debug:
        msg: "[BIBIGRID] Update permissions"
    - import_tasks: 000-playbook-rights-server.yaml

- name: Setup common software and dependencies for Debian
  when: "ansible_distribution_file_variety == 'Debian'"
  tags:
    - "pkg"
  block:
    - name: Running 001-apt.yaml
      debug:
        msg: "[BIBIGRID] Setup common software and dependencies"
    - import_tasks: 001-apt.yaml

- name: Setup common software and dependencies for RedHat
  when: "ansible_distribution_file_variety == 'RedHat'"
  tags:
    - "pkg"
  block:
    - debug:
        msg: "[BIBIGRID] Setup common software and dependencies"
    - import_tasks: 001-yum.yaml

- name: Configure Wireguard for VPNs
  when: "'vpn' in group_names and wireguard is defined"
  tags: "vpn"
  block:
    - debug:
        msg: "[BIBIGRID] Configure Wireguard for VPNs"
    - import_tasks: 002-wireguard-vpn.yaml

- name: Setup DNS
  when: "'master' in group_names"
  tags:
    - "dns"
  block:
    - debug:
        msg: "[BIBIGRID] Setup DNS"
    - import_tasks: 003-dns.yaml

- name: Update host file on worker
  when: "'workers' in group_names"
  tags:
    - "host"
  block:
    - debug:
        msg: "[BIBIGRID] Update hosts"
    - import_tasks: 004-update-hosts.yaml

- name: Configure database
  when: "'master' in group_names"
  tags:
    - "database"
    - "slurm"
  block:
    - debug:
        msg: "[BIBIGRID] Configure database"
    - import_tasks: 006-database.yaml

- name: Setup additional binary executables /usr/local/bin/
  when:
    - "'master' in group_names"
  tags:
    - "bin"
  block:
    - debug:
        msg: "[BIBIGRID] Setup additional binary executables /usr/local/bin/"
    - import_tasks: 010-bin-server.yaml

- name: Setup Zabbix
  when:
    - enable_zabbix|default(false)|bool
  tags:
    - "zabbix"
  block:
    - debug:
        msg: "[BIBIGRID] Setup Zabbix"
    - import_tasks: 011-zabbix-server.yaml
      when: "'master' in group_names"
    - import_tasks: 011-zabbix-agent.yaml

- debug:
    msg: "[BIBIGRID] Generate directory structure available on all hosts"
- name: Generate general directory structure available on all hosts
  import_tasks: 020-disk.yaml
  tags:
    - "disk"
- name: Generate server directory structure available on all hosts
  import_tasks: 020-disk-server.yaml
  when: "'master' in group_names"
  tags:
    - "disk"
- name: Generate worker directory structure available on all hosts
  import_tasks: 020-disk-worker.yaml
  when: "'master' not in group_names"
  tags:
    - "disk"

- name: Setup NFS
  when:
    - enable_nfs|default(false)|bool
  tags:
    - "nfs"
  block:
    - debug:
        msg: "[BIBIGRID] Setup NFS"
    - import_tasks: 025-nfs-server.yaml
      when: "'master' in group_names"
    - import_tasks: 025-nfs-worker.yaml
      when: "'master' not in group_names"

- name: Setup Docker
  debug:
    msg: "[BIBIGRID] Setup Docker"
- import_tasks: 030-docker.yaml
  tags:
    - "docker"

- name: Setup Slurm
  tags:
    - "slurm"
  block:
    - debug:
        msg: "[BIBIGRID] Setup Slurm"
    - import_tasks: 042-slurm.yaml
      when: "'vpngtw' not in group_names"
    - import_tasks: 042-slurm-server.yaml
      when: "'master' in group_names"

- name: Setup Theia
  when:
    - enable_ide|default(false)|bool
    - "'master' in group_names"
  tags:
    - "theia"
  block:
    - debug:
        msg: "[BIBIGRID] Setup Theia"
    - import_tasks: 900-theia.yaml

- name: APT Reactivate Auto Update
  when: "ansible_distribution_file_variety == 'Debian'"
  tags:
    - "pkg"
  block:
    - name: Running 999-apt-reactivate-auto-update.yaml
      debug:
        msg: "[BIBIGRID] APT Reactivate Auto Update"
    - import_tasks: 999-apt-reactivate-auto-update.yaml
